<?php
/**
 * @file
 * Query the Sensis API from within a Drupal node.
 *
 * 1. Provides a search for you to enter a query (eg. Cafe) and a location
 *    (eg. Melbourne)
 * 2. Queries SAPI to get the results
 * 3. Renders the results on a map
 * 4. Renders the results in a basic list below the map
 *
 * @todo Make this more Drupal-ish.
 */

/**
 * Module configuration.
 */
function sensis_query_admin() {
  $form = array();
  $form['sensis_query_apikey'] = array(
    '#type' => 'textfield',
    '#title' => 'Sensis Developer API Key',
    '#default_value' => variable_get('sensis_query_apikey'),
    '#required' => TRUE,
  );
  return system_settings_form($form);
}

/**
 * Implements hook_menu().
 */
function sensis_query_menu() {
  $items = array();

  $items['admin/config/sensis_query'] = array(
    'title' => 'Sensis query settings',
    'description' => 'Sensis query settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('sensis_query_admin'),
    'access arguments' => array('administer sensis_query settings'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['sensis_query'] = array(
    'title' => 'Sensis query form',
    'description' => 'Sensis query form',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('sensis_query_form_build'),
    'access arguments' => array('access sensis_query'),
    'type' => MENU_NORMAL_ITEM,
    'menu_name' => 'main-menu',
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function sensis_query_permission() {
  return array(
    'access sensis_query' => array(
      'title' => t('Access the Sensis Query form')),
    'administer sensis_query settings' => array(
      'title' => t('Administer Sensis Query settings'))
  );
}

/**
 * Implements hook_form().
 */
function sensis_query_form() {
  return drupal_get_form('sensis_query_form_build');
}

/**
 * Builds a form to construct a search query.
 */
function sensis_query_form_build($form, &$form_state) {
  $form['query'] = array(
    '#type' => 'textfield',
    '#title' => 'Search query',
    '#required' => TRUE,
  );

  $form['location'] = array(
    '#type' => 'textfield',
    '#title' => 'Location',
    '#description' => 'Suburb or locality, postcode, latitude and longitude,
      or state or territory',
    '#required' => TRUE,
  );

  // Add a select list for number of results to show on each page
  $form['rows'] = array(
    '#type' => 'select',
    '#title' => 'Number of results to return',
    '#default_value' => 20,
    '#options' => array(
      10 => '10',
      20 => '20',
      50 => '50',
    ),
    '#default_value' => 20,
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
    '#submit' => array('sensis_query_form_submit'),
  );

  return $form;
}

/**
 * Sends the query to Sensis.
 *
 * @param string $apikey
 *   Sensis Developer API key, entered in sensis_query_admin().
 * @param string $query
 *   What to search for (eg business type or name)
 * @param string $location
 *   Location to search
 */
function sensis_query_form_submit($form, &$form_state) {
  $apikey = variable_get('sensis_query_apikey');
  $query = $form_state['values']['query'];
  $location = $form_state['values']['location'];
  $rows = $form_state['values']['rows'];

  // URL of the Sensis Search API endpoint
  $endpoint = "http://api.sensis.com.au/ob-20110511/test/search";

  // Construct a URL with the query string, escaping any special characters
  $query_url = $endpoint . "?key=" . $apikey . 
      "&query=" . urlencode($query) .
      "&location=" . urlencode($location) .
      "&rows=" . urlencode($rows);

  // Call the endpoint
  $response = file_get_contents($query_url);

  // Check HTTP response code
  if (!$response) {
    drupal_set_message(t('Sensis server returned error HTTP') . $responsecode);
  }

  // Check API response
  $result = json_decode($response, TRUE);
  $code = $result["code"];
  if ($code != 200 && $code != 206) {
    drupal_set_message(t('API returned error') . $result["message"] . ", code: "
      . $result["code"]);
  }

  // Set variables for use  in sensis_query_page_alter
  variable_set('sensis_query_location', $location);
  variable_set('sensis_query_query', $query);
  variable_set('sensis_query_result', $result);
  variable_set('sensis_query_rows', $rows);
}

/**
 * Implements hook_page_alter().
 */
function sensis_query_page_alter(&$page) {
  $query = variable_get('sensis_query_query');
  if (current_path() == 'sensis_query' && isset($query)) {
    sensis_query_display_results($page);
  }
}

/**
 * Displays results of query.
 */
function sensis_query_display_results(&$page) {
  // These global variables store the most recent query variables and results
  $location = variable_get('sensis_query_location');
  $query = variable_get('sensis_query_query');
  $result = variable_get('sensis_query_result');
  $rows = variable_get('sensis_query_rows');

  // Total results returned
  $total = $result['totalResults'];

  if ($total > $rows) {
    $page['content']['title'] = array(
      '#weight' => 0,
      '#markup' => '<h3>Displaying the first ' . $rows . ' results for <em>'
        . $query . '</em> in <em>' . $location . '</em></h3>',
    );
  }
  else {
    $page['content']['title'] = array(
      '#weight' => 0,
      '#markup' => '<h3>Displaying ' . $total . ' results for <em>' . $query
        . '</em> in <em>' . $location . '</em></h3>',
    );
  }

  $page['content']['sensis_results_list'][] = array(
    '#weight' => 0,
    '#markup' => '<p>Total results returned: ' . $total . '</p>',
  );
  $page['content']['sensis_results_list'][] = array(
    '#weight' => 1,
    '#markup' => '<table><tr><th>ID</th><th>Name</th><th>Address</th><th>Latitude</th><th>Longitude</th></tr>',
  );

  // Results array containing result numbers and just the fields we need
  $i = 0;
  $brief_results = array();
  foreach ($result['results'] as &$listing) {
    $i++;
    $brief_results['id'] = $i;
    $brief_results['name'] = $listing['name'];
    $brief_results['address'] = $listing['primaryAddress']['addressLine'];
    $brief_results['suburb'] = $listing['primaryAddress']['suburb'];
    $brief_results['state'] = $listing['primaryAddress']['state'];
    $brief_results['postcode'] = $listing['primaryAddress']['postcode'];
    $brief_results['latitude'] = $listing['primaryAddress']['latitude'];
    $brief_results['longitude'] = $listing['primaryAddress']['longitude'];

    // Render results in a table, in order of relevance
    $page['content']['sensis_results_list'][] = array(
      '#weight' => $brief_results['id'] + 1,
      '#markup' => '<tr><td>' . $brief_results['id'] . '</td><td>' .
        $brief_results['name'] . '</td><td>' .
        $brief_results['address'] . ', ' .
        $brief_results['suburb'] . ' ' .
        $brief_results['state'] . ' ' .
        $brief_results['postcode'] . '</td><td>' .
        $brief_results['latitude'] . '</td><td>' .
        $brief_results['longitude'] . '</td></tr>',
    );
  }

  $page['content']['sensis_results_list'][] = array(
    '#weight' => $total + 2,
    '#markup' => '</table>',
  );

  // Unset query variables.
  variable_del('sensis_query_location');
  variable_del('sensis_query_query');
  variable_del('sensis_query_result');
  variable_del('sensis_query_rows');
}

